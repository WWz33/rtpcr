x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge", width =  bar.width, col = "black")
geom_errorbar(aes(ymax = RE + std, ymin = RE),
position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge", width =  bar.width, col = "black")
geom_errorbar(aes(ymax = RE + std, ymin = RE),
position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge", width =  bar.width, col = "black")
geom_errorbar(aes(ymax = RE + std, ymin = RE),
position = "dodge", width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge", width =  bar.width, col = "black")
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
b
a
b <- b[, c(arrangement, 4:ncol(b))]
b <- b[order(b$Genotype, b$Drought, b$SA), ]
b
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge", width =  bar.width, col = "black")
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(bar.width), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot <- function(x,
arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
b <- b[, c(arrangement, 4:ncol(b))]
b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
a <- a[, c(arrangement, 4:ncol(a))]
a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(0.9), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
a
b
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
#b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
#a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = b[,1], y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = a[,1], y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(0.9), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, arrangement = c(1, 2, 3))
threeFACTORplot(x)
# Previous code for creating the bar plot
bar_plot <- ggplot(b, aes(x = Genotype, y = RE, fill = factor(Drought))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ SA) +
xlab("Genotype") +
ylab("Relative Expression") +
geom_point(data = a, aes(x = Genotype, y = (10^(-wDCt)), fill = factor(Drought)),
position = position_dodge(width = 0.9), color = "black")
# Previous code for creating the bar plot
ggplot(b, aes(x = Genotype, y = RE, fill = factor(Drought))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ SA) +
xlab("Genotype") +
ylab("Relative Expression") +
geom_point(data = a, aes(x = Genotype, y = (10^(-wDCt)), fill = factor(Drought)),
position = position_dodge(width = 0.9), color = "black")
colnames(a[,1])
colnames(a)[1]
as.factor(colnames(a)[1])
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
#b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
#a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = as.factor(b[,1]), y = RE, fill = factor(b[,2]))) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ b[,3]) +
geom_point(data = a, aes(x = as.factor(a[,1]), y = (10^(-wDCt)), fill = factor(a[,2])),
position = position_dodge(0.9), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x)
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor
bar.width = 0.5,
ggplot(b, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = RE, fill = {{ group.factor }})) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ factor({{facet.factor}})) +
geom_point(data = a, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = (10^(-wDCt)), fill = {{ group.factor }}),
position = position_dodge(0.9), color = "black")
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
group.factor,
group.factor,
facet.factor,
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
#b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
#a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = RE, fill = {{ group.factor }})) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ factor({{facet.factor}})) +
geom_point(data = a, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = (10^(-wDCt)), fill = {{ group.factor }}),
position = position_dodge(0.9), color = "black")
return(pp1)
}
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
x.axis.factor,
group.factor,
facet.factor,
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
#b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
#a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = RE, fill = {{ group.factor }})) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ factor({{facet.factor}})) +
geom_point(data = a, aes(x = factor({{x.axis.factor}}, levels = as.character(unique({{x.axis.factor}}))),
y = (10^(-wDCt)), fill = {{ group.factor }}),
position = position_dodge(0.9), color = "black")
return(pp1)
}
threeFACTORplot(x)
a
threeFACTORplot(x, x.axis.factor = "Genotype",
group.factor = "Drought",
facet.factor = "SA")
threeFACTORplot <- function(x,
#arrangement = c(1, 2, 3),
x.axis.factor,
group.factor,
facet.factor,
bar.width = 0.5,
fill = "Reds",
xlab = "Gene",
ylab = "Relative Expression",
errorbar = "std",
y.axis.adjust = 0.5,
y.axis.by = 2,
letter.position.adjust = 0.3,
legend.title = "Legend Title",
legend.position = c(0.4, 0.8),
fontsize = 12,
show.letters = TRUE){
b <- x$Result
#b <- b[, c(arrangement, 4:ncol(b))]
#b <- b[order(b$Genotype, b$Drought, b$SA), ]
RE <- b$RE
std <- b$std
LCL <- b$LCL
UCL <- b$UCL
a <- x$Final_data
#a <- a[, c(arrangement, 4:ncol(a))]
#a <- a[order(a$Genotype, a$Drought, a$SA), ]
pp1 <- ggplot(b, aes(x = factor({{x.axis.factor}}),
y = RE, fill = {{ group.factor }})) +
geom_bar(stat = "identity", position = "dodge") +
#geom_errorbar(aes(ymax = RE + std, ymin = RE),
#  position = position_dodge(bar.width), width = 0.15, color = "black") +
facet_wrap( ~ factor({{facet.factor}})) +
geom_point(data = a, aes(x = factor({{x.axis.factor}}),
y = (10^(-wDCt)), fill = {{ group.factor }}),
position = position_dodge(0.9), color = "black")
return(pp1)
}
x <- qpcrANOVA(data_3factor_a, numberOfrefGenes = 1)
threeFACTORplot(x, x.axis.factor = "Genotype",
group.factor = "Drought",
facet.factor = "SA")
