S	0.5	1	1	2	29.03	2	30.61
S	0.5	1	2	2	28.73	2	30.2
S	0.5	2	3	2	28.83	2	30.49
", header = TRUE, check.names = FALSE)
qpcrANOVA(blk)
qpcrANOVA(blk, Block = "Block")
qpcrANOVA(blk, Block = "Block", NumberOfrefGenes = 1)
library(devtools)
setwd("E:/Dropbox/iqpcr/iqpcr/")
doc
document()
use_data(data_2factorBlock)
use_data(R/data_2factorBlock)
use_data("data_2factorBlock")
use_data(data_2factorBlock)
setwd("E:/Dropbox/iqpcr/iqpcr/R")
use_data(data_2factorBlock)
use_data(data_2factorBlock.r)
use_data("data_2factorBlock")
?use_data
use_data(data_2factorBlock)
library(devtools)
document()
use_data(data_2factorBlock)
use_data("data_2factorBlock")
use_data("data_2factorBlock.r")
use_data(data_2factorBlock)
use_data(data_2factorBlock, overwrite = T)
use_data(data_2factorBlock, overwrite = T, internal = T)
library(devtools)
document()
check()
use_data(data_ttest2, overwrite = T)
document()
setwd("C:/Users/mirza/Desktop/iqpcr/iqpcr")
document()
check()
use_data(data_ttest2. overwrite = )
use_data(data_ttest2. overwrite = T)
use_data(data_ttest2, overwrite = T)
document()
check()
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95
", header = TRUE, check.names = FALSE)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95
", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95
", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
document()
check()
use_data(data_ttest2, overwrite = T)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
use_data(data_ttest2, overwrite = T)
library(devtools)
use_data(data_ttest2, overwrite = T)
setwd("C:/Users/mirza/Desktop/iqpcr/iqpcr/R")
use_data(data_ttest2, overwrite = T)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
check()
build()
setwd("C:/Users/mirza/Desktop/iqpcr/")
submit_cran("iqpcr")
setwd("E:/Dropbox/iqpcr/R")
use_data(data_ttest2, overwrite = T)
library(devtools)
use_data(data_ttest2, overwrite = T)
data(data_ttest2)
data_ttest2 <- read.table(text = "
Condition	E	Gene	Ct
control	2	g	31.26
control	2	g	31.01
control	2	g	30.97
treatment	2	g	32.65
treatment	2	g	32.03
treatment	2	g	32.4
control	2	ref1	28.86
control	2	ref1	28.42
control	2	ref1	28.56
treatment	2	ref1	28.31
treatment	2	ref1	29.13
treatment	2	ref1	28.62
control	2	ref2	28.43
control	2	ref2	28.90
control	2	ref2	28.17
treatment	2	ref2	28.64
treatment	2	ref2	29.12
treatment	2	ref2	28.95
", header = TRUE, check.names = FALSE)
use_data(data_ttest2, overwrite = T)
check()
library(iqpcr)
library(iqpcr)
detach("package:iqpcr", unload = TRUE)
library(iqpcr)
detach("package:iqpcr", unload = TRUE)
remove.packages("iqpcr")
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
library(iqpcr)
qpcrTTEST(data_ttest2, numberOfrefGenes = 2, paired = FALSE, var.equal = T)
qpcrTTEST(data_ttest, numberOfrefGenes = 1, paired = FALSE, var.equal = T)
qpcrTTESTplot(data_ttest2)
qpcrTTEST(data_ttest, numberOfrefGenes = 1, paired = FALSE, var.equal = T)
qpcrTTEST(data_ttest2, numberOfrefGenes = 2, paired = FALSE, var.equal = T)
qpcrTTESTplot(data_ttest)
qpcrTTESTplot(data_ttest2)
qpcrTTESTplot <- function(x,
order = default.order,
numberOfrefGenes,
paired = FALSE,
var.equal = TRUE,
width = 0.5,
fill = "skyblue",
y.axis.adjust = 0,
y.axis.by = 2,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Gene",
fontsize = 12){
default.order <- unique(x[,3])[-length(unique(x[,3]))]
# convert_to_character function
convert_to_character <- function(numbers) {
characters <- character(length(numbers))  # Initialize a character vector to store the results
for (i in seq_along(numbers)) {
if (numbers[i] < 0.01) {
characters[i] <- "**"
} else if (numbers[i] < 0.05) {
characters[i] <- "*"
} else {
characters[i] <- "ns"
}
}
return(characters)
}
if(numberOfrefGenes == 1) {
TTESTRES <- qpcrTTEST(x, numberOfrefGenes = 1, paired = paired, var.equal = var.equal)
} else {
TTESTRES <- qpcrTTEST(x, numberOfrefGenes = 2, paired = paired, var.equal = var.equal)
}
# Getting barplot:
df2 <- as.data.frame(TTESTRES[[2]])
# Convert the column to a factor with specified levels
df2$Gene <- factor(df2$Gene, levels = order)
# Order the data frame based on the specified column
df2 <- df2[order(df2$Gene), ]
Gene <- df2$Gene
Gene <- factor(Gene, levels = Gene)
Fold_Change <- df2$FC
Lower.Er <- df2$LCL
Upper.Er <- df2$UCL
pvalue <- df2$pvalue
p <- ggplot(df2, aes(Gene, as.numeric(Fold_Change))) +
geom_col(col = "black", fill = fill, width = width) +
geom_errorbar(aes(Gene, ymin=as.numeric(Lower.Er), ymax = as.numeric(Upper.Er)),
width=0.1) +
geom_text(aes(label = convert_to_character(pvalue),
x = Gene,
y = as.numeric(Upper.Er)),
vjust = -0.5, size = 4) +
ylab(ylab) + xlab(xlab) +
theme_bw()+
theme(axis.text.x = element_text(size = fontsize, color = "black", angle = 0, hjust = 0.5),
axis.text.y = element_text(size = fontsize, color = "black", angle = 0, hjust = 0.5),
axis.title  = element_text(size = fontsize)) +
scale_y_continuous(breaks=seq(0, max(as.numeric(Upper.Er) + y.axis.adjust) + 2, by = y.axis.by),
limits = c(0, max(as.numeric(Upper.Er) + y.axis.adjust) + 2), expand = c(0, 0)) +
theme(legend.text = element_text(colour = "black", size = fontsize),
legend.background = element_rect(fill = "transparent"))
print(p)
}
qpcrTTESTplot(data_ttest2)
qpcrTTESTplot(data_ttest2, numberOfrefGenes = 2)
library(ggplot2)
qpcrTTESTplot(data_ttest2, numberOfrefGenes = 2)
library()
library(devtools)
document()
rm(list = c("qpcrTTESTplot"))
document()
library(iqpcr)
library(iqpcr)
data_1factor
qpcrANOVA(data_1factor)
a <- read.table(text = ")
SA	Rep	EPO	POCt	EGAPDH	GAPDHCt	ref2E	ref2Ct
L1	1	2	33.3	2	31.53	2	31.13
L1	2	2	33.39	2	31.57	2	30.87
L1	3	2	33.34	2	31.5	2	30.95
L2	1	2	32.73	2	31.3	2	30.43
L2	2	2	32.46	2	32.55	2	31.55
L2	3	2	32.6	2	31.92	2	31.92
L3	1	2	33.48	2	33.3	2	32.3
L3	2	2	33.27	2	33.37	2	32.37
L3	3	2	33.32	2	33.35	2	32.35", header = T)
# Producing the plot
oneFACTORfcplot(a,
levels = c(3, 2, 1),
level.names = c("A1", "A2", "A3"),
width = 0.5,
fill = "skyblue",
y.axis.adjust = 1,
y.axis.by = 1,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Pairs",
fontsize = 12)
a <- read.table(text = "
SA	Rep	EPO	POCt	EGAPDH	GAPDHCt	ref2E	ref2Ct
L1	1	2	33.3	2	31.53	2	31.13
L1	2	2	33.39	2	31.57	2	30.87
L1	3	2	33.34	2	31.5	2	30.95
L2	1	2	32.73	2	31.3	2	30.43
L2	2	2	32.46	2	32.55	2	31.55
L2	3	2	32.6	2	31.92	2	31.92
L3	1	2	33.48	2	33.3	2	32.3
L3	2	2	33.27	2	33.37	2	32.37
L3	3	2	33.32	2	33.35	2	32.35", header = T)
# Producing the plot
oneFACTORfcplot(a,
levels = c(3, 2, 1),
level.names = c("A1", "A2", "A3"),
width = 0.5,
fill = "skyblue",
y.axis.adjust = 1,
y.axis.by = 1,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Pairs",
fontsize = 12)
oneFACTORfcplot <- function(
x,
numberOfrefGenes,
levels,
level.names,
width = 0.5,
fill = "skyblue",
y.axis.adjust = 1,
y.axis.by = 1,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Pairs",
fontsize = 12){
if(numberOfrefGenes == 1) {
FINALDATA  <- qpcrANOVA(x)$Final_data
POSTHUC <- qpcrANOVA(x)$Post_hoc_Test
} else {
FINALDATA  <- qpcrANOVA(x, numberOfrefGenes = 2)$Final_data
POSTHUC <- qpcrANOVA(x, numberOfrefGenes = 2)$Post_hoc_Test
}
xfl <- x[,1]
levels <- rev(levels)
x$SA <- levels[as.factor(xfl)]
Nrows <- length(unique(FINALDATA[,1])[-1])
withControl  <- POSTHUC[1:Nrows,]
withControl
tableC <- rbind("1 - 1" = data.frame(row.names = "1 - 1", FC = 1, pvalue=1, signif.=" ", LCL=0, UCL=0), withControl)
UCLp <- tableC$UCL
LCLp <- tableC$LCL
FCp <- tableC$FC
significance <- tableC$signif.
rownames(tableC) <- level.names
pairs <- rownames(tableC)
pfc <- ggplot(tableC, aes(factor(pairs, levels = level.names), FCp)) +
geom_col(col = "black", fill = fill, width = width) +
geom_errorbar(aes(pairs, ymin = FCp - LCLp, ymax =  FCp + UCLp),
width=0.1) +
geom_text(aes(label = significance,
x = pairs,
y = FCp + UCLp),
vjust = -0.5, size = 4) +
ylab(ylab) + xlab(xlab) +
theme_bw()+
theme(axis.text.x = element_text(size = fontsize, color = "black", angle = 0, hjust = 0.5),
axis.text.y = element_text(size = fontsize, color = "black", angle = 0, hjust = 0.5),
axis.title  = element_text(size = fontsize)) +
scale_y_continuous(breaks=seq(0, max(UCLp) + max(FCp) + y.axis.adjust, by = y.axis.by),
limits = c(0, max(UCLp) + max(FCp) + y.axis.adjust + y.axis.adjust), expand = c(0, 0)) +
theme(legend.text = element_text(colour = "black", size = fontsize),
legend.background = element_rect(fill = "transparent"))
outlist <- list(plot = pfc,
Table = tableC)
return(outlist)
}
a <- read.table(text = "
SA	Rep	EPO	POCt	EGAPDH	GAPDHCt	ref2E	ref2Ct
L1	1	2	33.3	2	31.53	2	31.13
L1	2	2	33.39	2	31.57	2	30.87
L1	3	2	33.34	2	31.5	2	30.95
L2	1	2	32.73	2	31.3	2	30.43
L2	2	2	32.46	2	32.55	2	31.55
L2	3	2	32.6	2	31.92	2	31.92
L3	1	2	33.48	2	33.3	2	32.3
L3	2	2	33.27	2	33.37	2	32.37
L3	3	2	33.32	2	33.35	2	32.35", header = T)
# Producing the plot
oneFACTORfcplot(a,
numberOfrefGenes = 2
levels = c(3, 2, 1),
# Producing the plot
oneFACTORfcplot(a,
numberOfrefGenes = 2,
levels = c(3, 2, 1),
level.names = c("A1", "A2", "A3"),
width = 0.5,
fill = "skyblue",
y.axis.adjust = 1,
y.axis.by = 1,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Pairs",
fontsize = 12)
library(ggplot2)
# Producing the plot
oneFACTORfcplot(a,
numberOfrefGenes = 2,
levels = c(3, 2, 1),
level.names = c("A1", "A2", "A3"),
width = 0.5,
fill = "skyblue",
y.axis.adjust = 1,
y.axis.by = 1,
letter.position.adjust = 0.3,
ylab = "Average Fold Change",
xlab = "Pairs",
fontsize = 12)
library(devtools)
document()
check()
library(iqpcr)
qpcrANOVA(data_3factor_a, numberOfrefGenes = 2)
detach("package:iqpcr", unload = TRUE)
remove.packages("iqpcr")
document()
check()
check()
check()
document()
check()
check()
document()
check()
document()
check()
document()
check()
setwd("C:/Users/mirza/Desktop/iqpcr/")
document()
setwd("C:/Users/mirza/Desktop/iqpcr/iqpcr/")
document()
check()
build()
install.packages("C:/Users/mirza/Desktop/iqpcr/iqpcr_1.0.0.tar.gz", repos = NULL, type = "source")
library(iqpcr)
library(devtools)
document()
submit_cran("iqpcr")
setwd("C:/Users/mirza/Desktop/iqpcr/")
submit_cran("iqpcr")
library(iqpcr)
library(iqpcr)
detach("package:iqpcr", unload = TRUE)
remove.packages("iqpcr")
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
library(iqpcr)
efficiency(data_efficiency)
meanTech(data_withTechRep, groups = 1:4)
oneFACTORfcplot(data_1factor, levels = c(3, 2, 1), level.names = c(“A1”, “A2”, “A3”))
oneFACTORfcplot(data_1factor, levels = c(3, 2, 1), level.names = c("A1", "A2", "A3"))
oneFACTORfcplot(data_1factor, numberOfrefGenes = 1, levels = c(3, 2, 1), level.names = c("A1", "A2", "A3"))
out <- qpcrANOVA(data_1factor, numberOfrefGenes = 1)$Result
out
qpcrANOVA(data_3factor_a, numberOfrefGenes = 1, p.adj = "none")
qpcrTTEST(data_ttest, numberOfrefGenes = 1, paired = FALSE, var.equal = TRUE)
qpcrTTESTplot(data_ttest, numberOfrefGenes = 1, order = c("C2H2-01"," C2H2-12", "C2H2-26")
qpcrTTESTplot(data_ttest, numberOfrefGenes = 1, order = c("C2H2-01"," C2H2-12", "C2H2-26"))
res <- qpcrANOVA(data_3factor_b, numberOfrefGenes = 1)$Result; threeFACTORplot(res, arrangement = c(3, 1, 2))
res <- qpcrANOVA(data_2factor, numberOfrefGenes = 1)$Result; twoFACTORplot(res, x.axis.factor = Genotype, group.factor = Drought)
devtools::check()
setwd("E:/Dropbox/iqpcr/")
devtools::check()
remove.packages("iqpcr")
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
library(iqpcr)
detach("package:iqpcr", unload = TRUE)
devtools::check()
remove.packages("iqpcr")
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
remove.packages("iqpcr")
devtools::install_github("mirzaghaderi/iqpcr", build_vignettes = TRUE)
library(iqpcr)
devtools::check()
library(iqpcr)
